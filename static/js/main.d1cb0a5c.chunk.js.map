{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/LoadingSpinner/LoadingSpinner.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","LoadingSpinner","baseURL","loadMovie","title","a","fetch","result","json","data","FindMovie","setMovies","useState","isLoading","setIsLoading","movieTitle","setMovieTitle","movieFromServer","setMovieFromServer","showError","setShowError","trim","toLocaleLowerCase","Response","htmlFor","type","id","placeholder","classNames","value","onChange","e","target","onClick","some","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1cb0a5c.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <>\n      {movie && (\n        <div className=\"card\">\n          <div className=\"card-image\" data-cy=\"card-image\">\n            <figure className=\"image is-4by3\">\n              <img\n                src={movie.Poster}\n                alt=\"Film logo\"\n              />\n            </figure>\n          </div>\n          <div className=\"card-content\">\n            <div className=\"media\">\n              <div className=\"media-left\">\n                <figure className=\"image is-48x48\">\n                  <img\n                    src=\"images/imdb-logo.jpeg\"\n                    alt=\"imdb\"\n                  />\n                </figure>\n              </div>\n              <div className=\"media-content\">\n                <p\n                  className=\"title is-8\"\n                  data-cy=\"movie-title\"\n                >\n                  {movie.Title}\n                </p>\n              </div>\n            </div>\n\n            <div className=\"content\" data-cy=\"content\">\n              {movie.Plot}\n              <br />\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import './LoadingSpinner.scss';\n\nconst LoadingSpinner = () => {\n  return (\n    <div className=\"spinner-container\">\n      <div className=\"loading-spinner\" />\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","const baseURL = 'https://www.omdbapi.com/?apikey=314cbfea&t=';\n\nexport async function loadMovie(title: string) {\n  try {\n    const result = await fetch(`${baseURL}${title}`);\n    const data = await result.json();\n\n    return data;\n  } catch (error) {\n    return (`Error: ${error}`);\n  }\n}\n","import React, { useState, Dispatch, SetStateAction } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\nimport { MovieCard } from '../MovieCard';\nimport { loadMovie } from '../../api/api';\n\ntype Props = {\n  movies: Movie[];\n  setMovies: Dispatch<SetStateAction<Movie[]>>;\n};\n\nexport const FindMovie: React.FC<Props> = ({ setMovies, movies }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movieTitle, setMovieTitle] = useState('');\n  const [movieFromServer, setMovieFromServer] = useState<Movie | null>(null);\n  const [showError, setShowError] = useState('');\n\n  async function fetchMovie() {\n    if (!movieTitle.trim()) {\n      setShowError('Enter the title to search');\n\n      return;\n    }\n\n    setIsLoading(true);\n\n    const result = await loadMovie(movieTitle.trim().toLocaleLowerCase());\n\n    if (result.Response === 'False') {\n      setShowError('Movie not found!');\n      setIsLoading(false);\n\n      return;\n    }\n\n    setIsLoading(false);\n    setMovieFromServer(result);\n  }\n\n  function addMovieToList() {\n    if (!movieFromServer) {\n      setShowError('Search movie first!');\n    }\n\n    if (movies.some(movie => movie.imdbID === movieFromServer?.imdbID)) {\n      setShowError('This movie already in the list!');\n\n      return;\n    }\n\n    if (movieFromServer) {\n      setMovies([...movies, movieFromServer]);\n      setMovieFromServer(null);\n      setMovieTitle('');\n    }\n  }\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input ',\n                { 'is-danger': showError },\n              )}\n              value={movieTitle}\n              onChange={(e) => {\n                setMovieTitle(e.target.value);\n                setShowError('');\n              }}\n            />\n          </div>\n          {showError && (\n            <p className=\"help is-danger\">\n              {showError}\n            </p>\n          )}\n        </div>\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={fetchMovie}\n              data-cy=\"find\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addMovieToList}\n              data-cy=\"add\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {isLoading && <LoadingSpinner />}\n        {movieFromServer && <MovieCard movie={movieFromServer} />}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie setMovies={setMovies} movies={movies} />\n      </div>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}